CUDA backend failed to initialize: Unable to load cuDNN. Is it installed? (Set TF_CPP_MIN_LOG_LEVEL=0 and rerun for more info.)
/home/eleni/anaconda3/envs/jax_sapiens/lib/python3.9/site-packages/flashbax/buffers/trajectory_buffer.py:473: UserWarning: Setting max_size dynamically sets the `max_length_time_axis` to be `max_size`//`add_batch_size = 1000`.This allows one to control exactly how many timesteps are stored in the buffer.Note that this overrides the `max_length_time_axis` argument.
  warnings.warn(
/home/eleni/anaconda3/envs/jax_sapiens/lib/python3.9/site-packages/jax/_src/numpy/array_methods.py:66: UserWarning: Explicitly requested dtype <class 'jax.numpy.int64'> requested in astype is not available, and will be truncated to dtype int32. To enable more dtypes, set the jax_enable_x64 configuration option or the JAX_ENABLE_X64 shell environment variable. See https://github.com/google/jax#current-gotchas for more.
  return lax_numpy.astype(arr, dtype)
Traceback (most recent call last):
  File "/home/eleni/workspace/flowers/SAPIENS_jax/purejaxrl/dqn.py", line 308, in <module>
  File "/home/eleni/workspace/flowers/SAPIENS_jax/purejaxrl/dqn.py", line 290, in main
    rngs = jax.random.split(rng, config["NUM_SEEDS"])
  File "/home/eleni/anaconda3/envs/jax_sapiens/lib/python3.9/site-packages/jax/_src/traceback_util.py", line 179, in reraise_with_filtered_traceback
    return fun(*args, **kwargs)
  File "/home/eleni/anaconda3/envs/jax_sapiens/lib/python3.9/site-packages/jax/_src/pjit.py", line 257, in cache_miss
    outs, out_flat, out_tree, args_flat, jaxpr = _python_pjit_helper(
  File "/home/eleni/anaconda3/envs/jax_sapiens/lib/python3.9/site-packages/jax/_src/pjit.py", line 163, in _python_pjit_helper
    args_flat, _, params, in_tree, out_tree, _, _, _ = infer_params_fn(
  File "/home/eleni/anaconda3/envs/jax_sapiens/lib/python3.9/site-packages/jax/_src/api.py", line 317, in infer_params
    return pjit.common_infer_params(pjit_info_args, *args, **kwargs)
  File "/home/eleni/anaconda3/envs/jax_sapiens/lib/python3.9/site-packages/jax/_src/pjit.py", line 493, in common_infer_params
    jaxpr, consts, canonicalized_out_shardings_flat, out_layouts_flat = _pjit_jaxpr(
  File "/home/eleni/anaconda3/envs/jax_sapiens/lib/python3.9/site-packages/jax/_src/pjit.py", line 996, in _pjit_jaxpr
    jaxpr, final_consts, out_type = _create_pjit_jaxpr(
  File "/home/eleni/anaconda3/envs/jax_sapiens/lib/python3.9/site-packages/jax/_src/linear_util.py", line 349, in memoized_fun
    ans = call(fun, *args)
  File "/home/eleni/anaconda3/envs/jax_sapiens/lib/python3.9/site-packages/jax/_src/pjit.py", line 936, in _create_pjit_jaxpr
    jaxpr, global_out_avals, consts = pe.trace_to_jaxpr_dynamic(
  File "/home/eleni/anaconda3/envs/jax_sapiens/lib/python3.9/site-packages/jax/_src/profiler.py", line 336, in wrapper
    return func(*args, **kwargs)
  File "/home/eleni/anaconda3/envs/jax_sapiens/lib/python3.9/site-packages/jax/_src/interpreters/partial_eval.py", line 2288, in trace_to_jaxpr_dynamic
    jaxpr, out_avals, consts = trace_to_subjaxpr_dynamic(
  File "/home/eleni/anaconda3/envs/jax_sapiens/lib/python3.9/site-packages/jax/_src/interpreters/partial_eval.py", line 2310, in trace_to_subjaxpr_dynamic
    ans = fun.call_wrapped(*in_tracers_)
  File "/home/eleni/anaconda3/envs/jax_sapiens/lib/python3.9/site-packages/jax/_src/linear_util.py", line 191, in call_wrapped
    ans = self.f(*args, **dict(self.params, **kwargs))
  File "/home/eleni/anaconda3/envs/jax_sapiens/lib/python3.9/site-packages/jax/_src/traceback_util.py", line 179, in reraise_with_filtered_traceback
    return fun(*args, **kwargs)
  File "/home/eleni/anaconda3/envs/jax_sapiens/lib/python3.9/site-packages/jax/_src/api.py", line 1258, in vmap_f
    out_flat = batching.batch(
  File "/home/eleni/anaconda3/envs/jax_sapiens/lib/python3.9/site-packages/jax/_src/linear_util.py", line 191, in call_wrapped
    ans = self.f(*args, **dict(self.params, **kwargs))
  File "/home/eleni/workspace/flowers/SAPIENS_jax/purejaxrl/dqn.py", line 91, in train
    network = QNetwork(action_dim=env.action_space(env_params).n)
